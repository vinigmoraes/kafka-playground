version: '3'

services:
  kafka-manager:
    container_name: kafka-manager
    image: kafkamanager/kafka-manager
    depends_on:
      - zookeeper
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
      JMX_PORT: 9999
    networks:
      - local

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - local

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    ports:
      - 29092:29092
      - 9092:9092
    depends_on:
      - zookeeper
    networks:
      - local
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_DELETE_TOPIC_ENABLE: "true"

  connect-ui:
    container_name: connect-ui
    image: landoop/kafka-connect-ui
    restart: always
    depends_on:
      - connect
    ports:
      - 8000:8000
    networks:
      - local
    environment:
      CONNECT_URL: connect:8083

  connect:
    container_name: connect
    image: confluentinc/cp-kafka-connect
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8083:8083
    volumes:
      - ./connectors:/usr/plugins
    networks:
      - local
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: /usr/plugins

  postgres:
    container_name: postgres-account-service
    image: postgres:11-alpine
    command: ["-c", "max_connections=200"]
    ports:
      - 5432:5432
    volumes:
      - ./src/main/resources/db.migration:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: bankdb

    # MongoDB Replica Set
  mongo1:
    image: "bitnami/mongodb:latest"
    container_name: mongo1
#    command: --replSet rs0 --smallfiles --oplogSize 128
    networks:
      - local
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGODB_DATABASE: usersservicedb
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: root
      MONGODB_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey
      MONGODB_ADVERTISED_HOSTNAME:

  mongo2:
    image: "bitnami/mongodb:latest"
    container_name: mongo2
#    command: --replSet rs0 --smallfiles --oplogSize 128
    depends_on:
      - mongo1
    networks:
      - local
    ports:
      - "27018:27017"
    restart: always
    environment:
      MONGODB_PRIMARY_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_REPLICA_SET_KEY: replicasetkey
      MONGODB_PRIMARY_HOST: mongo1
      MONGODB_ADVERTISED_HOSTNAME:

  mongo3:
    image: "bitnami/mongodb:latest"
    container_name: mongo3
    depends_on:
      - mongo1
#    command: --replSet rs0 --smallfiles --oplogSize 128
    networks:
      - local
    ports:
      - "27019:27017"
    restart: always
    environment:
      MONGODB_PRIMARY_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_REPLICA_SET_KEY: replicasetkey
      MONGODB_PRIMARY_HOST: mongo1
      MONGODB_ADVERTISED_HOSTNAME:

  schema-registry-ui:
    container_name: schema-registry-ui
    image: landoop/schema-registry-ui
    restart: always
    depends_on:
      - schema-registry
    ports:
      - 8001:8001
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
      PORT: 8001
    networks:
      - local

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    networks:
      - local

networks:
  local:

